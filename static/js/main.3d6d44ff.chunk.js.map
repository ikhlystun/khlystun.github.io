{"version":3,"sources":["components/Nav/index.js","components/Search/index.js","components/Post/index.js","components/List/index.js","components/Home/index.js","components/PostView/index.js","components/App/index.js","index.js"],"names":["Nav","react_default","a","createElement","className","react_router_dom","to","Component","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","handleChange","handleReset","event","onChange","target","value","_this2","searchText","url","concat","fetch","then","response","status","Promise","reject","json","output","onSubmit","results","catch","reason","preventDefault","onReset","type","placeholder","onClick","style","marginTop","Post","post","id","src","poster_path","alt","title","name","List","posts","postsArr","Array","isArray","forEach","push","Post_Post","key","Home","react","Nav_Nav","Search_Search","List_List","PostView","JSON","parse","localStorage","getItem","postId","match","params","find","console","log","overview","vote_average","release_date","first_air_date","App","state","result","setState","setItem","stringify","react_router","exact","path","render","routeProps","Home_Home","assign","PostView_PostView","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3d6d44ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class Nav extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <nav className=\"navbar\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">Film search</Link>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nconst API_KEY = '2d94eb1d15a9cdc01a2f012d877c3d87';\r\n\r\nexport default class Search extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onChange(event.target.value);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n\r\n    const searchText = this.props.value;\r\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&language=en&query=${searchText}`;\r\n\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.status !== 200) {\r\n          return Promise.reject();\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then((output) => {\r\n        this.props.onSubmit(output.results);\r\n      })\r\n      .catch((reason) => {\r\n        this.props.onSubmit(null);\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleReset(event) {\r\n    this.props.onReset();\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"jumbotron\">\r\n          <h3 className=\"text-center\">Find films</h3>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" value={this.props.value} onChange={this.handleChange} className=\"form-control\" placeholder=\"Game of thrones...\" />\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.handleReset} style={{ marginTop: 20 + 'px' }}>Reset search</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './style.css';\r\n\r\n\r\nexport default class Post extends Component {\r\n\r\n  render() {\r\n\r\n    const { post } = this.props;\r\n    const posterUrl = 'https://image.tmdb.org/t/p/w300/';\r\n    const noPosterUrl = 'http://www.sclance.com/pngs/no-image-png/no_image_png_935227.png';\r\n\r\n    return(\r\n      <div className=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div className=\"post\">\r\n          <Link to={'/post/' + post.id} className=\"post__img\">\r\n            <img src={ (post.poster_path != null) ? posterUrl + post.poster_path : noPosterUrl} alt={post.title || post.name} />\r\n          </Link>\r\n          <Link to={'/post/' + post.id}>{post.title || post.name}</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\nimport Post from '../Post';\r\n\r\nexport default class List extends Component {\r\n\r\n  render() {\r\n\r\n    const { posts } = this.props;\r\n    let postsArr = [];\r\n\r\n    if ( Array.isArray(posts) ) {\r\n\r\n      posts.forEach(post => {\r\n        postsArr.push(\r\n          <Post key={post.id} post={post} />\r\n        );\r\n      });\r\n\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {postsArr}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}","import React, { Component, Fragment } from 'react';\r\n\r\nimport Nav from '../Nav';\r\nimport Search from '../Search';\r\nimport List from '../List';\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.props.onChange(value);\r\n  }\r\n\r\n  handleSubmit(value) {\r\n    this.props.onSubmit(value);\r\n  }\r\n\r\n  handleReset() {\r\n    this.props.onReset();\r\n  }\r\n\r\n  render() {\r\n\r\n    const posts = this.props.posts;\r\n    const searchText = this.props.value;\r\n\r\n    return(\r\n      <Fragment>\r\n        <Nav />\r\n        <Search\r\n          value={searchText}\r\n          onChange={this.handleChange}\r\n          onSubmit={this.handleSubmit}\r\n          onReset={this.handleReset}\r\n        />\r\n        <List posts={posts} />\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}","import React, { Component, Fragment } from 'react';\r\n\r\nimport Nav from '../Nav';\r\n\r\nimport './style.css';\r\n\r\nexport default class PostView extends Component {\r\n\r\n  render() {\r\n\r\n    const posts = JSON.parse(localStorage.getItem('posts'))\r\n    const postId = this.props.match.params.id;\r\n    const post = posts.find(post => +post.id === +postId);\r\n    const posterUrl = 'https://image.tmdb.org/t/p/w500/';\r\n    const noPosterUrl = 'http://www.sclance.com/pngs/no-image-png/no_image_png_935227.png';\r\n\r\n    console.log(post);\r\n\r\n    return(\r\n      <Fragment>\r\n        <Nav />\r\n        <div className=\"container\">\r\n          <div className=\"post-view row\">\r\n            <div className=\"post-view__img col-md-5 col-lg-4\">\r\n              <img src={ (post.poster_path != null) ? posterUrl + post.poster_path : noPosterUrl } alt={ post.title || post.name } />\r\n            </div>\r\n            <div className=\"post-view__info col-md-7 col-lg-8\">\r\n              <h2 className=\"post-view__title\">{ post.title || post.name }</h2>\r\n              <p className=\"post-view__desc\">{ post.overview }</p>\r\n              { post.vote_average ? (<div className=\"post-view__meta\"><strong>Rating:</strong> { post.vote_average }</div>) : ('') }\r\n              { post.release_date || post.first_air_date ? (<div className=\"post-view__meta\"><strong>Date:</strong> { post.release_date || post.first_air_date }</div>) : ('') }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Home from '../Home';\r\nimport PostView from '../PostView';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: localStorage.getItem('searchText'),\r\n      result: JSON.parse(localStorage.getItem('posts'))\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.setState({\r\n      value: value\r\n    });\r\n  }\r\n\r\n  handleSubmit(value) {\r\n    this.setState({\r\n      result: value\r\n    });\r\n  }\r\n\r\n  handleReset() {\r\n    this.setState({\r\n      value: '',\r\n      result: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const posts = this.state.result;\r\n    const searchText = this.state.value;\r\n\r\n    localStorage.setItem('posts', JSON.stringify(posts));\r\n    localStorage.setItem('searchText', searchText);\r\n\r\n    return(\r\n      <Router>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={(routeProps) => (\r\n            <Home\r\n              {...routeProps}\r\n              value={searchText}\r\n              onReset={this.handleReset}\r\n              onChange={this.handleChange}\r\n              onSubmit={this.handleSubmit}\r\n              posts={posts} />\r\n          )} />\r\n        <Route\r\n          path=\"/post/:id\"\r\n          render={(routeProps) => (\r\n            <PostView\r\n              {...routeProps}\r\n              posts={posts} />\r\n          )} />\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}